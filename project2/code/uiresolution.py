# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'uiresolution.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QPushButton,QTextEdit
from resolution import resolution
from PyQt5.QtGui import QColor
import time

class Ui_Resolution(QtWidgets.QMainWindow):
    ipt = []    #输入
    opt = []    #输出
    oopt = []   #输出2
    tar = []    #主要路径
    opname = [] #输出文件名
    def setupUi(self, Resolution):
        Resolution.setObjectName("Resolution")
        Resolution.resize(500, 600)
        self.centralwidget = QtWidgets.QWidget(Resolution)
        self.centralwidget.setObjectName("centralwidget")
        self.pin = QtWidgets.QTextEdit(self.centralwidget)
        self.pin.setGeometry(QtCore.QRect(10, 10, 475, 150))
        self.pin.setObjectName("pin")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 170, 475, 51))
        self.pushButton.setObjectName("pushButton")
        self.out = QtWidgets.QTextEdit(self.centralwidget)
        self.out.setGeometry(QtCore.QRect(10, 241, 475, 335))
        self.out.setObjectName("out")
        Resolution.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Resolution)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 406, 22))
        self.menubar.setObjectName("menubar")
        Resolution.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Resolution)
        self.statusbar.setObjectName("statusbar")
        Resolution.setStatusBar(self.statusbar)
        
        #进行归结
        self.pushButton.clicked.connect(self.doR)
        
        self.retranslateUi(Resolution)
        QtCore.QMetaObject.connectSlotsByName(Resolution)

    def retranslateUi(self, Resolution):
        _translate = QtCore.QCoreApplication.translate
        Resolution.setWindowTitle(_translate("Resolution", "Resolution"))
        self.pushButton.setText(_translate("Resolution", "Resolution"))

    def doR(self) :
        self.ipt=''
        self.opt.clear()
        self.tar.clear()
        self.oopt.clear()
        self.ipt=self.pin.toPlainText()
        self.out.clear()
        tst = time.time()
        try :                               #进行归结
            self.oopt,self.tar,self.opt=resolution(self.ipt)
            ted = time.time()
        except Exception as e :             #排错
            self.out.append("EXCEPT : "+str(e)) 
            self.out.append("This may be caused by the wrong format of the input file")  
            self.out.append(" Please follow 'Readme.md' ")
            return
        self.pin.clear()
        self.opname = self.ipt.split('\n')[0]+self.oopt[0][0]+self.oopt[len(self.oopt)-1][0]
        with open('result/'+self.opname+'.txt','a',encoding="utf-8") as optxt : #将归结结果的目标路径写入txt文件
            for y in self.oopt :            
                if self.tar[self.oopt.index(y)]==1 :    #找出所有子句中的目标子句，即可以归结出空集的子句
                    self.out.setTextColor(QColor(255, 101, 107))    #标红
                    self.out.append(str(int(self.oopt.index(y))+1)+' : '+y)
                    optxt.write((str(int(self.oopt.index(y))+1)+' : '+y).replace(u'\xac', u'')+'\n')
                else :
                    self.out.setTextColor(QColor(1, 1, 1))      #否则正常输出
                    self.out.append((str(int(self.oopt.index(y))+1)+' : '+y))
            for t in self.opt :                 #找出所有子句中的目标子句，即可以归结出空集的子句
                if self.tar[self.opt.index(t)+len(self.oopt)]==1 :
                    self.out.setTextColor(QColor(255, 101, 107))#标红
                    self.out.append(t)
                    optxt.write(t+'\n')
                else :
                    self.out.setTextColor(QColor(1, 1, 1))#否则正常输出
                    self.out.append(t)
            self.out.append("-------------------------------------------------")
            optxt.write("-------------------------------------------------"+'\n')
            self.out.append("running time : "+str(ted-tst))
            optxt.write("running time : "+str(ted-tst)+'\n')
        optxt.close() 